.init:
  image:
    name: registry.caas.olympe.cloud/infra/docker/node-tools-light:14-bullseye-slim
  tags:
    - eks

# Initialize the npm environment with gitlab registry
.npm-config:
  extends: .init
  before_script:
    - export GITLAB_TOKEN=$(vault kv get -field token kv/devops/npm/token)
    - npm config set @olympeio:registry https://gitlab.caas.olympe.cloud/api/v4/projects/236/packages/npm/
    - npm config set '//gitlab.caas.olympe.cloud/api/v4/projects/236/packages/npm/:_authToken' "$GITLAB_TOKEN"

stages:
  - setup
  - build
  - unit-tests
  - deploy-app

# Initialize the npm environment and install packages
setup:
  stage: setup
  extends: .npm-config
  script:
    - npm install
  artifacts:
    expire_in: 1 day
    paths:
      - node_modules/
    
# Build npm package
build-package:
  stage: build
  extends: .init
  script:
    - if [ -z "$CI_COMMIT_TAG" ]; then apt-get install -y jq; sh ./bumpVersion.sh; fi
    - npm run build
  dependencies:
    - setup
  artifacts:
    paths:
      - dist/

# Run unit tests
tests:
  stage: unit-tests
  extends: .init
  image: # Use an image that includes chromium and jre for test
    name: registry.caas.olympe.cloud/infra/docker/node-tools:14-bullseye-slim
  script:
    - npm test
  dependencies:
    - setup

# Publish job
.publish:
  stage: deploy-app
  dependencies:
    - build-package

# Publish to internal npm registry on gitlab
publish-internal:
  extends:
    - .npm-config
    - .publish
  script:
    # Set the tag to use for the newly published package :
    # - "dev" is used when commit comes from develop
    # - "stable" is used when we do a release
    # - "uat" is used when beta or rc tag is created
    - if [[ -z "$CI_COMMIT_TAG" ]]; then export TAG="dev"; elif [[ ${CI_COMMIT_TAG} =~ '(-rc|-beta)[0-9]+' ]]; then export TAG="uat"; else export TAG="stable"; fi
    - cd dist
    - npm publish --tag $TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(?:-(?:rc|beta)\.?\d+)?$/'

# Publish to public npm registry (npmjs.org). Publish only if a new version tag vX.Y.Z was pushed.
publish-public:
  image:
    name: node:14-bullseye-slim # Original node image to keep the public registry npmjs.org
  extends: .publish
  tags:
    - eks
  script:
    - npm config set '//registry.npmjs.org/:_authToken' "$NPM_TOKEN"
    - cd dist
    - npm publish --access public
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/
