{
  "rootTag": "0162f2ecd021046908f5",
  "operations": [
    {
      "o": 1,
      "t": "0162f2ecd021046908f5",
      "p": {
        "01703376c4a81c0e9d94": "stable",
        "v": 2,
        "fdff023000000000000011": "Begin Transaction",
        "01692aa71f3108454479": true,
        "01621fb84e320000f001": "public",
        "ff023000000000000011": "Begin Transaction"
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "0162f2ecd022046908f5",
      "p": {
        "01740c5d4ae4b520dd01": 0,
        "v": 1,
        "ff023000000000000011": "Control Flow"
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "0162f2ecd023046908f5",
      "p": {
        "01740c5d4ae4b520dd01": 0,
        "v": 1,
        "ff023000000000000011": "Control Flow"
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "017b5afa06eeab111f38",
      "p": {
        "01703376c4a81c0e9d92": "Initiate a transaction. All subsequent operations (object creations, properties and relations being set, etc.) are composed into a single transaction which is executed once the matching `End Transaction` brick is executed.\n\nThis ensures atomicity of the operations, as well as improves performance as we send a single request to the Olympe Orchestrator.",
        "01703376c4a81c0e9d91": "Initiate a transaction.",
        "v": 1
      },
      "i": -1
    }
  ],
  "optionalOperations": []
}
