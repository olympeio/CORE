{
  "rootTag": "01626cae1b9d62b5eec9",
  "operations": [
    {
      "o": 1,
      "t": "01626cae1b9d62b5eec9",
      "p": {
        "01703376c4a81c0e9d94": "stable",
        "v": 1,
        "01692aa71f3108454479": true,
        "01621fb84e320000f001": "public",
        "ff023000000000000011": "Modulo"
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "01626cae7e620f886e5c",
      "p": {
        "01740c5d4ae4b520dd01": 0,
        "v": 1,
        "ff023000000000000011": "a mod b"
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "01626cae3c7dedba26fb",
      "p": {
        "01740c5d4ae4b520dd01": 0,
        "v": 1,
        "ff023000000000000011": "a"
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "01626cae56fc0bf930fe",
      "p": {
        "01740c5d4ae4b520dd01": 1,
        "v": 1,
        "ff023000000000000011": "b"
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "017b35893b903b76d8ff",
      "p": {
        "01703376c4a81c0e9d92": "Performs a modulo (remainder) operation between the 2 numbers passed as arguments.\nIt always takes the sign of the dividend.\n\n**Examples**\n```\n12 % 5 == 2\n5.5 % 2 == 1.5\n```\n",
        "01703376c4a81c0e9d91": "Returns the remainder left over when one operand is divided by a second operand.",
        "v": 1
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "017b3589428f0c9a0886",
      "p": {
        "01703376c4a81c0e9d92": "The result of the modulo operation.",
        "v": 1
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "017b35893f973274cb33",
      "p": {
        "01703376c4a81c0e9d92": "First operand.",
        "v": 1
      },
      "i": -1
    },
    {
      "o": 1,
      "t": "017b35893f9782b96a41",
      "p": {
        "01703376c4a81c0e9d92": "Second operand.",
        "v": 1
      },
      "i": -1
    }
  ],
  "optionalOperations": []
}
