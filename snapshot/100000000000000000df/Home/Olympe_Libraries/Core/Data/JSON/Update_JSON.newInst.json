{
 "operations": [
  {
   "o": 1,
   "p": {
    "01740c5d4ae4b520dd01": 0,
    "ff023000000000000011": "Control Flow",
    "v": 1
   },
   "t": "017fb1cbae192c4e8194"
  },
  {
   "o": 1,
   "p": {
    "01740c5d4ae4b520dd01": 0,
    "ff023000000000000011": "Control Flow",
    "v": 1
   },
   "t": "017fb1cbae197210879e"
  },
  {
   "o": 1,
   "p": {
    "01621fb84e320000f001": "public",
    "01692aa71f3108454479": true,
    "fdff023000000000000011": "Update JSON",
    "ff023000000000000011": "Update JSON",
    "v": 18
   },
   "t": "017fb1cbae19910b35da"
  },
  {
   "o": 1,
   "p": {
    "01703376c4a81c0e9d91": "Adds or edits values of JSON by provided path",
    "01703376c4a81c0e9d92": "Adds or edits values of JSON by specified by the property path.\n\nThe path is specified in dotted form. To update or add an element inside an array, the property needs to be included inside brackets, e.g. '[name]'.\n\nIf the path was found the value of the property will be replaced by a new value.\nIf it was not found the new value will be added to the source json.\n<br>\n<br>\n**Examples**:\n```\nAdding a simple primitive value to the root:\n\nUpdateJSON( [ '{\"a\":\"test\",\"b\":{}}', 'c', 42 ] ) ->{\"a\":\"test\",\"b\":{},\"c\":42}\n\n\nReplacement of a property in the array by a new object:\n\nUpdateJSON( {\"a\": \"test\", \"b\": [ { \"b1\": \"foo\"}, { \"b1\": \"foo\" } ] }, b.[b1], \"test 2\") -> {\"a\": \"test\", \"b\": [ { \"b1\": \"test 2\"}, { \"b1\": \"test 2\"}]}\n\n\nAdding a new object to the property inside an object in array that already contains a primitive value:\n\nUpdateJSON({ \"type\" : \"event\", \"desc\": [ { \"year\": \"1900\"}, { \"year\": \"1991\" } ] }, 'desc.[year].month', { \"day\": \"14th of May\" } ) ->  \n\n{\"type\":\"event\" , \"desc\" : [ { \"year\" : { \"1900\" : \"1900\", \"month\" : { \"day\": \"14th of May\" } } }, { \"year\" : { \"1991\" : \"1991\", \"month\" : { \"day\": \"14th of May\" } } } ] }\n\n```\n\nIt is possible to add a new value to the last unknown property. If one needs to add a new value deeper than to the first non-existing property, it is necessary to put it as a wrapper in the new value, e.g.\n\nSource: {\"country\": \"Germany\", \"store\": {\"author\": \"Goethe\"}}\nDesired path: store.category.books\nDesired new value: { \"name\": \"fiction\" }\n\nActual path: store.category\nActual new value:  { \"books\" : { \"name\": \"fiction\" } }\n\n",
    "v": 1573
   },
   "t": "017fb1cbc1e600741538"
  },
  {
   "o": 1,
   "p": {
    "v": 1
   },
   "t": "017fb1cbc2519d8e40e4"
  },
  {
   "o": 1,
   "p": {
    "v": 1
   },
   "t": "017fb1cbc2a20a695444"
  },
  {
   "o": 1,
   "p": {
    "01740c5d4ae4b520dd01": 1,
    "ff023000000000000011": "Source",
    "v": 10
   },
   "t": "017fb1cbcb5a8aeaebce"
  },
  {
   "o": 1,
   "p": {
    "01703376c4a81c0e9d92": "JSON object or string",
    "v": 3
   },
   "t": "017fb1cbcbe02e6f8198"
  },
  {
   "o": 1,
   "p": {
    "01740c5d4ae4b520dd01": 1,
    "ff023000000000000011": "Result",
    "v": 16
   },
   "t": "017fb1cbd1429e2a8489"
  },
  {
   "o": 1,
   "p": {
    "01703376c4a81c0e9d92": "Transformed JSON object",
    "v": 3
   },
   "t": "017fb1cbd1c1182bce59"
  },
  {
   "o": 1,
   "p": {
    "01740c5d4ae4b520dd01": 2,
    "ff023000000000000011": "Error Flow",
    "v": 12
   },
   "t": "017fb1cbd516e1661a99"
  },
  {
   "o": 1,
   "p": {
    "01703376c4a81c0e9d92": "Triggered by providing incorrect json",
    "v": 11
   },
   "t": "017fb1cbd58e0f67561a"
  },
  {
   "o": 1,
   "p": {
    "01740c5d4ae4b520dd01": 2,
    "ff023000000000000011": "Path",
    "v": 6
   },
   "t": "017fb1ccbb99453f1d60"
  },
  {
   "o": 1,
   "p": {
    "01703376c4a81c0e9d92": "The property path",
    "v": 3
   },
   "t": "017fb1ccbcba5d6882be"
  },
  {
   "o": 1,
   "p": {
    "01740c5d4ae4b520dd01": 3,
    "ff023000000000000011": "New Value",
    "v": 17
   },
   "t": "017fb1ccbd709d4d4e94"
  },
  {
   "o": 1,
   "p": {
    "01703376c4a81c0e9d92": "The value to be added or use for replacing",
    "v": 68
   },
   "t": "017fb1ccbe78e446c1d0"
  }
 ],
 "optionalOperations": [
 ],
 "rootTag": "017fb1cbae19910b35da"
}
