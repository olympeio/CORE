{"operations":[{"i":-1,"o":1,"p":{"01740c5d4ae4b520dd01":0,"ff023000000000000011":"origin","v":1},"t":"01694800e2590d530765"},{"i":-1,"o":1,"p":{"01740c5d4ae4b520dd01":0,"ff023000000000000011":"origin","v":1},"t":"01694800e259851d67f1"},{"i":-1,"o":1,"p":{"01621fb84e320000f001":"public","01692aa71f3108454479":true,"01703376c4a81c0e9d94":"stable","fdff023000000000000011":"Create Relation","ff023000000000000011":"Create Relation","v":2},"t":"01694800e25998fe5b81"},{"i":-1,"o":1,"p":{"01740c5d4ae4b520dd01":2,"ff023000000000000011":"destination","v":1},"t":"01694800e259b5053852"},{"i":-1,"o":1,"p":{"01740c5d4ae4b520dd01":1,"ff023000000000000011":"relation","v":1},"t":"01694800e259d471e049"},{"i":-1,"o":1,"p":{"01703376c4a81c0e9d91":"Creates a relation between 2 objects.","01703376c4a81c0e9d92":"Creates a specified relation between 2 given objects.\nIt is not necessary to check whether the two objects are already related. In case they are, the brick returns successfully without changing anything (in other words: two objects can only be linked once).\n\nLet's take the following data model with two data types, and one relation between them:  \n\n**Data type: Person**\n- Attribute 1: name (string)\n- Relation 1: owns (Car)\n\n**Data type: Car**\n- Attribute 1: brand (string)\n\n\nAdding an `owns` relation between Person `p` and Car `c` can be done by setting the following inputs:\n- origin: `p`\n- relation: `Person -> owns`\n- destination: `c`\n","v":4},"t":"017b35893b4464702bea"},{"i":-1,"o":1,"p":{"01703376c4a81c0e9d92":"The object from which the relation starts (as per the data model definition)","v":3},"t":"017b35893f1ae8a25ac4"},{"i":-1,"o":1,"p":{"01703376c4a81c0e9d92":"The related object","v":17},"t":"017b35893f1bd9ea6afc"},{"i":-1,"o":1,"p":{"01703376c4a81c0e9d92":"The relation linking the origin and destination","v":3},"t":"017b35893f1c9074cd44"},{"i":-1,"o":1,"p":{"01703376c4a81c0e9d92":"The origin object.","v":1},"t":"017b3589427025e507f3"}],"optionalOperations":[],"rootTag":"01694800e25998fe5b81"}
