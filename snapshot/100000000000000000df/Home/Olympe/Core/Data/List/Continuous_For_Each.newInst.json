{"operations":[{"i":-1,"o":1,"p":{"01621fb84e320000f001":"public","01692aa71f3108454479":true,"fdff023000000000000011":"Continuous For Each","ff023000000000000011":"Continuous For Each","v":2},"t":"017c9e0503c008f8ea74"},{"i":-1,"o":1,"p":{"01703376c4a81c0e9d91":"Execute a function for each element of a list.","01703376c4a81c0e9d92":"Execute the specified function to each element of the list. Unlike `For Each`, `Continuous For Each` keeps all elements in memory and reacts to changes in the content of the list. It will therefore run the `iterator` function on *current* and *future* elements of the list.\n\n<br>\nThis functions similarly to Javascript's [forEach()](https://medium.com/@JeffLombardJr/understanding-foreach-map-filter-and-find-in-javascript-f91da93b9f2c).\n\n","v":359},"t":"017c9e052156780cfb63"},{"i":-1,"o":1,"p":{"01740c5d4ae4b520dd01":0,"ff023000000000000011":"list","v":1},"t":"017c9e0526b0cfe1f12a"},{"i":-1,"o":1,"p":{"01703376c4a81c0e9d92":"The list to process","v":1},"t":"017c9e0526dbfceaca61"},{"i":-1,"o":1,"p":{"01740c5d4ae4b520dd01":1,"ff023000000000000011":"iterator","v":1},"t":"017c9e052726588db244"},{"i":-1,"o":1,"p":{"01703376c4a81c0e9d92":"The function to call for each element of the list. <br>It has no outputs, and the following inputs:<br>- `item (Object)`: The current item of the list.<br>- `rank (Number)`: The rank of the current item.<br>- `list (List)`: The full list being iterated.","v":23},"t":"017c9e0527832a749377"}],"optionalOperations":[],"rootTag":"017c9e0503c008f8ea74"}
