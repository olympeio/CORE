{"operations":[{"o":1,"p":{"01621fb84e320000f001":"public","01692aa71f3108454479":true,"01703376c4a81c0e9d94":"deprecated","fdff023000000000000011":"Parse Json","ff023000000000000011":"Parse JSON","v":3},"t":"0162e331fae562c33ef7"},{"o":1,"p":{"01740c5d4ae4b520dd01":0,"ff023000000000000011":"source","v":1},"t":"0162e331fc8fe5716519"},{"o":1,"p":{"01740c5d4ae4b520dd01":0,"ff023000000000000011":"result","v":1},"t":"0162e3322c583d0cbd93"},{"o":1,"p":{"01740c5d4ae4b520dd01":1,"ff023000000000000011":"path","v":1},"t":"0162e33251904fd5ad37"},{"o":1,"p":{"01703376c4a81c0e9d91":"Parse a JSON string.","01703376c4a81c0e9d92":"Use [Get From JSON](/#editedItem=017fb123b9c91dd2f6a2) instead.\n\nReason:\n- doesn't support providing json object to the input, but json string\n- strignifies result if it is an object\n***\nParses a JSON string and extracts the object specified by the path.\n\nThe path is specified in dotted form.\n\nExamples\n----------------\n```\nParseJson({ \"a\": { \"b\": \"hello\"}}, 'a.b') -> \"hello\"\nParseJson(['a', 'b', 'c'], 1) -> 'b'\nParseJson({ \"03. my key\": true}, '[\"03. my key\"]') -> true\n```\nFull doc of the syntax supported <a href=\"https://www.npmjs.com/package/jsonpath-plus\" target=\"_blank\">jsonpath-plus</a>. A list is returned when multiple results are found.","v":290},"t":"017b35893b73ed20429e"},{"o":1,"p":{"01703376c4a81c0e9d92":"The JSON string.","v":1},"t":"017b35893f7100a7893c"},{"o":1,"p":{"01703376c4a81c0e9d92":"The path where the object is. Wildcard (*), recursion (..), range ([start:end:step] are supported.)","v":1},"t":"017b35893f715803831d"},{"o":1,"p":{"01703376c4a81c0e9d92":"The object instance.","v":1},"t":"017b3589427a301f1fd8"}],"optionalOperations":[],"rootTag":"0162e331fae562c33ef7"}
